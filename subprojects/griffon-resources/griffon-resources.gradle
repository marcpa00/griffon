/*
 * Copyright 2010-2012 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'

ext.pomDescription = 'Griffon common resources'

tasks.withType(Jar).all { task ->
    task.appFileJar = false
}

task jarSharedFiles(type: Jar, dependsOn: ':griffon-wrapper:dist') {
    appFileJar = true
    archiveName = 'griffon-shared-files.jar'
    destinationDir = "$buildDir/assemble/jars" as File
    from(project(':griffon-wrapper').file('build/distributions/griffon-wrapper-files.zip'))
}

task jarAppFiles(type: Jar) {
    appFileJar = true
    archiveName = 'griffon-app-files.jar'
    destinationDir = "$buildDir/assemble/jars" as File
    from('src/app') {
        into 'griffon-app'
    }
}

task jarArchetypeFiles(type: Jar) {
    appFileJar = true
    archiveName = 'griffon-archetype-files.jar'
    destinationDir = "$buildDir/assemble/jars" as File
    from 'src/archetype'
}

task jarPluginFiles(type: Jar) {
    appFileJar = true
    archiveName = 'griffon-plugin-files.jar'
    destinationDir = "$buildDir/assemble/jars" as File
    from 'src/plugin'
}

task jarIntegrationFiles(type: Jar) {
    appFileJar = true
    archiveName = 'griffon-integration-files.jar'
    destinationDir = "$buildDir/assemble/jars" as File
    from 'src/ide'
}

task jarDistFiles(type: Jar) {
    appFileJar = true
    archiveName = 'griffon-dist-files.jar'
    destinationDir = "$buildDir/assemble/jars" as File
    from 'src/dist'
}

task jarDefaultBundles(type: Jar) {
    appFileJar = true
    archiveName = 'griffon-default-bundles.jar'
    destinationDir = "$buildDir/assemble/jars" as File
    from 'src/bundles'
}

resourceFilesJars = tasks.withType(Jar).matching({ task -> task.appFileJar } as Spec)

jar {
    dependsOn: resourceFilesJars
    resourceFilesJars.each { task ->
        from task.outputs.files
    }
}
